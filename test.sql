-- 1. Retrieve the names and emails of all customers living in 'New York'
SELECT name, email
FROM Customers
WHERE city = 'New York';

-- 2. List all products in the 'Electronics' category sorted by price in descending order
SELECT *
FROM Products
WHERE category = 'Electronics'
ORDER BY price DESC;

-- 3. Find the total revenue generated by each product category
SELECT p.category, SUM(oi.quantity * p.price) AS total_revenue
FROM Order_Items oi
JOIN Products p ON oi.product_id = p.product_id
GROUP BY p.category;

-- 4. Display the names of customers who have placed more than 5 orders
SELECT c.name
FROM Customers c
JOIN Orders o ON c.customer_id = o.customer_id
GROUP BY c.customer_id, c.name
HAVING COUNT(o.order_id) > 5;

-- 5. Calculate the average order value for each month
SELECT 
  DATE_FORMAT(order_date, '%Y-%m') AS month,
  AVG(order_total) AS avg_order_value
FROM (
  SELECT o.order_id, o.order_date, SUM(oi.quantity * p.price) AS order_total
  FROM Orders o
  JOIN Order_Items oi ON o.order_id = oi.order_id
  JOIN Products p ON oi.product_id = p.product_id
  GROUP BY o.order_id, o.order_date
) AS order_totals
GROUP BY month
ORDER BY month;

-- 6. Identify the top 3 customers who spent the most money
SELECT c.customer_id, c.name, SUM(oi.quantity * p.price) AS total_spent
FROM Customers c
JOIN Orders o ON c.customer_id = o.customer_id
JOIN Order_Items oi ON o.order_id = oi.order_id
JOIN Products p ON oi.product_id = p.product_id
GROUP BY c.customer_id, c.name
ORDER BY total_spent DESC
LIMIT 3;

-- 7. Add a new column named 'discount_applied' to the 'Orders' table
ALTER TABLE Orders
ADD COLUMN discount_applied VARCHAR(3) DEFAULT 'No';

-- 8. Update 'discount_applied' to 'Yes' for customers with total orders > $500
UPDATE Orders
SET discount_applied = 'Yes'
WHERE customer_id IN (
  SELECT customer_id
  FROM (
    SELECT o.customer_id, SUM(oi.quantity * p.price) AS total_spent
    FROM Orders o
    JOIN Order_Items oi ON o.order_id = oi.order_id
    JOIN Products p ON oi.product_id = p.product_id
    GROUP BY o.customer_id
    HAVING total_spent > 500
  ) AS high_spenders
);

-- 9. Remove all orders placed before 2022
DELETE FROM Orders
WHERE order_date < '2022-01-01';

-- 10. Create a view: customer name, product name, quantity purchased for each order
CREATE VIEW customer_order_details AS
SELECT 
  o.order_id,
  c.name AS customer_name,
  p.name AS product_name,
  oi.quantity
FROM Orders o
JOIN Customers c ON o.customer_id = c.customer_id
JOIN Order_Items oi ON o.order_id = oi.order_id
JOIN Products p ON oi.product_id = p.product_id;
